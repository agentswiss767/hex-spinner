body {
  margin: 0;
  font-family: sans-serif;
  background: #f5f5f5;
  text-align: center;
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 100vh;
}

.controls {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 20px;
  padding: 20px;
}

.controls label {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 60vh;
}

.hexagon {
  position: relative;
  width: 200px;
  height: calc(200px * 0.866); /* Correct aspect ratio for a hexagon */
  background: #ccc;
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  animation: rotate 2s linear infinite;
  transform: scale(1);
}

.ball {
  position: absolute;
  background-color: red;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  /* Use a single transform for the keyframe animation */
  animation: moveOnHexagon 2s linear infinite;
}

/* Hexagon Sizes */
.hexagon.small {
  width: 100px;
  height: calc(100px * 0.866);
}
.hexagon.medium {
  width: 200px;
  height: calc(200px * 0.866);
}
.hexagon.big {
  width: 300px;
  height: calc(300px * 0.866);
}

/* Ball Sizes */
.ball.small {
  width: 15px;
  height: 15px;
}
.ball.medium {
  width: 30px;
  height: 30px;
}
.ball.big {
  width: 50px;
  height: 50px;
}

/* Animations */
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Refined keyframes to move the ball along the hexagon's path precisely */
@keyframes moveOnHexagon {
  /* top point */
  0% { transform: translate(50%, 0) translate(-50%, -50%); }
  /* top right point */
  16.67% { transform: translate(100%, 25%) translate(-50%, -50%); }
  /* bottom right point */
  33.33% { transform: translate(100%, 75%) translate(-50%, -50%); }
  /* bottom point */
  50% { transform: translate(50%, 100%) translate(-50%, -50%); }
  /* bottom left point */
  66.67% { transform: translate(0%, 75%) translate(-50%, -50%); }
  /* top left point */
  83.33% { transform: translate(0%, 25%) translate(-50%, -50%); }
  /* back to top point */
  100% { transform: translate(50%, 0) translate(-50%, -50%); }
}
